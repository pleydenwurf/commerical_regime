---
- name: Configure OpenGrok with Keycloak OIDC Authentication
  hosts: opengrok_servers
  become: yes
  vars:
    opengrok_home: /opt/opengrok
    opengrok_data: /var/opengrok
    keycloak_url: "https://your-keycloak-server.domain.com"
    keycloak_realm: "your-realm"
    keycloak_client_id: "opengrok-client"
    keycloak_client_secret: "{{ vault_keycloak_client_secret }}"
    opengrok_url: "https://your-opengrok-server.domain.com"
    
  tasks:
    - name: Install required packages for OIDC support
      package:
        name:
          - python3-requests
          - python3-jose
        state: present

    - name: Create OpenGrok configuration directory if it doesn't exist
      file:
        path: "{{ opengrok_data }}/etc"
        state: directory
        owner: tomcat
        group: tomcat
        mode: '0755'

    - name: Create OIDC configuration file
      template:
        src: oidc.properties.j2
        dest: "{{ opengrok_data }}/etc/oidc.properties"
        owner: tomcat
        group: tomcat
        mode: '0640'
      notify: restart tomcat

    - name: Update OpenGrok logging configuration
      template:
        src: logging.properties.j2
        dest: "{{ opengrok_data }}/etc/logging.properties"
        owner: tomcat
        group: tomcat
        mode: '0644'
      notify: restart tomcat

    - name: Configure web.xml for OIDC authentication
      template:
        src: web.xml.j2
        dest: /var/lib/tomcat/webapps/opengrok/WEB-INF/web.xml
        owner: tomcat
        group: tomcat
        mode: '0644'
        backup: yes
      notify: restart tomcat

    - name: Create OIDC filter configuration
      template:
        src: opengrok-oidc-filter.xml.j2
        dest: "{{ opengrok_data }}/etc/opengrok-oidc-filter.xml"
        owner: tomcat
        group: tomcat
        mode: '0644'
      notify: restart tomcat

    - name: Download and install OIDC filter JAR (if using custom filter)
      get_url:
        url: "https://github.com/oracle/opengrok/releases/download/{{ opengrok_version }}/opengrok-web-{{ opengrok_version }}.jar"
        dest: /var/lib/tomcat/webapps/opengrok/WEB-INF/lib/
        owner: tomcat
        group: tomcat
        mode: '0644'
      when: custom_oidc_filter is defined

    - name: Update OpenGrok configuration for OIDC
      blockinfile:
        path: "{{ opengrok_data }}/etc/configuration.xml"
        marker: "<!-- {mark} ANSIBLE MANAGED OIDC CONFIG -->"
        block: |
          <entry>
            <string>pluginDirectory</string>
            <string>{{ opengrok_data }}/etc</string>
          </entry>
          <entry>
            <string>authenticationPlugin</string>
            <string>opengrok.auth.plugin.OidcPlugin</string>
          </entry>
        backup: yes
      notify: restart tomcat

    - name: Set proper permissions on configuration files
      file:
        path: "{{ item }}"
        owner: tomcat
        group: tomcat
        recurse: yes
      loop:
        - "{{ opengrok_data }}/etc"
        - /var/lib/tomcat/webapps/opengrok/WEB-INF

  handlers:
    - name: restart tomcat
      service:
        name: tomcat
        state: restarted

# Additional tasks for SSL/TLS configuration if needed
- name: Configure SSL certificates
  hosts: opengrok_servers
  become: yes
  tasks:
    - name: Copy SSL certificate
      copy:
        src: "{{ ssl_cert_path }}"
        dest: /etc/ssl/certs/opengrok.crt
        owner: root
        group: root
        mode: '0644'
      when: ssl_cert_path is defined

    - name: Copy SSL private key
      copy:
        src: "{{ ssl_key_path }}"
        dest: /etc/ssl/private/opengrok.key
        owner: root
        group: root
        mode: '0600'
      when: ssl_key_path is defined

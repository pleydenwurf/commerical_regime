---
- name: Configure OpenGrok with Keycloak OIDC Authentication
  hosts: opengrok_servers
  become: yes
  vars:
    opengrok_home: /opt/opengrok
    opengrok_data: /var/opengrok
    keycloak_url: "https://your-keycloak-server.domain.com"
    keycloak_realm: "your-realm"
    keycloak_client_id: "opengrok-client"
    keycloak_client_secret: "{{ vault_keycloak_client_secret }}"
    opengrok_url: "https://your-opengrok-server.domain.com"
    
  tasks:
    - name: Ensure OpenGrok service is stopped before configuration
      service:
        name: tomcat
        state: stopped

    - name: Create OpenGrok configuration directory if it doesn't exist
      file:
        path: "{{ opengrok_data }}/etc"
        state: directory
        owner: tomcat
        group: tomcat
        mode: '0755'

    - name: Configure OpenGrok with OIDC settings
      lineinfile:
        path: "{{ opengrok_data }}/etc/configuration.xml"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: '<authenticationClass>', line: '    <authenticationClass>org.opengrok.indexer.authorization.plugins.OidcPlugin</authenticationClass>' }
        - { regexp: '<oidcClientId>', line: '    <oidcClientId>{{ keycloak_client_id }}</oidcClientId>' }
        - { regexp: '<oidcClientSecret>', line: '    <oidcClientSecret>{{ keycloak_client_secret }}</oidcClientSecret>' }
        - { regexp: '<oidcDiscoveryUrl>', line: '    <oidcDiscoveryUrl>{{ keycloak_url }}/realms/{{ keycloak_realm }}/.well-known/openid_configuration</oidcDiscoveryUrl>' }
        - { regexp: '<oidcRedirectUri>', line: '    <oidcRedirectUri>{{ opengrok_url }}/api/v1/auth/callback</oidcRedirectUri>' }
      notify: restart tomcat

    - name: Enable authentication in OpenGrok configuration
      xml:
        path: "{{ opengrok_data }}/etc/configuration.xml"
        xpath: "//configuration"
        add_children:
          - authenticationEnabled: "true"
          - authorizationEnabled: "true"
        backup: yes
      notify: restart tomcat

    - name: Start OpenGrok service
      service:
        name: tomcat
        state: started
        enabled: yes



    - name: Set proper permissions on configuration files
      file:
        path: "{{ item }}"
        owner: tomcat
        group: tomcat
        recurse: yes
      loop:
        - "{{ opengrok_data }}/etc"
        - /var/lib/tomcat/webapps/opengrok/WEB-INF

  handlers:
    - name: restart tomcat
      service:
        name: tomcat
        state: restarted

# Additional tasks for SSL/TLS configuration if needed
- name: Configure SSL certificates
  hosts: opengrok_servers
  become: yes
  tasks:
    - name: Copy SSL certificate
      copy:
        src: "{{ ssl_cert_path }}"
        dest: /etc/ssl/certs/opengrok.crt
        owner: root
        group: root
        mode: '0644'
      when: ssl_cert_path is defined

    - name: Copy SSL private key
      copy:
        src: "{{ ssl_key_path }}"
        dest: /etc/ssl/private/opengrok.key
        owner: root
        group: root
        mode: '0600'
      when: ssl_key_path is defined
